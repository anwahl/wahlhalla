<script>
    $.getJSON("/persons", function(data){
      data.forEach(element => {
        $("#assignPerson").append("<option value='" + element.id + "''>" + element.firstName + " " + element.lastName +  "</option>");
      });
    });
</script>
<div class="container" id="assignChoreForm">
    <h3><span class="glyphicon glyphicon-plus"></span> Assign Task</h3>
    <form action="/assignedTasks" method="POST">
        <div id="unassignedTasksTable" class="taskTable"></div>
        <br/>
        <label class="form-label" for="assignPerson">Assign to Person:</label>
        <select class="form-inline input-sm form-input " id="assignPerson" name="assignPerson">
            <option value="">...</option>
        </select>
        <br/>
        <button class="smt-btn btn btn-primary" type="submit">Submit</button>
    </form>
</div>
<script>
  var rowMenu = [
    {
        label: "Edit Item",
        action:function(e,row){
            window.location.replace('/scheduledTask/'+row.getIndex());
        }
    },
    {
        label: "Unschedule Task",
        action:function(e,row){
            window.location.replace('/unschedule/'+row.getIndex());
      }
    }];

  let unassignedTasksTable = new Tabulator("#unassignedTasksTable", {
    <%- include ("../partials/tabulatorConfig.ejs") %>
    ajaxURL:"/scheduledTasks",
    columns:[ 
    {formatter:"responsiveCollapse", width:75, minWidth:75, hozAlign:"center", resizable:false, headerSort:false},
    { title: "Location Information",
        columns: [  
        {title:"Target", field:"targetName", width:200, widthGrow:3,responsive:1, clickPopup:function(e, cell){
          var data = cell.getRow().getData();
          container = document.createElement("div"),
          contents = "<ul style='padding:0;  margin-top:5px; margin-bottom:0; margin-right:5px;'>";
          contents += "<li><strong>Location:</strong> " + data.locationName + "</li>";
          contents += "<li><strong>Target Type:</strong> " + data.targetTypeName + "</li>";
          contents += "</ul>";

          container.innerHTML = contents;

          return container;
        }}
        ]
      },
      { title: "Task Information",
        columns: [  
        {title:"Task Type", field:"taskTypeName"},
        {title:"Task", field:"taskName", width:350, widthGrow:3,responsive:0, formatter:function(cell, formatterParams, onRendered){
          return "<strong>" + cell.getValue() + "</strong>"
        }}
      ]},
      { title: "Time Information",
        columns: [ 
          {title:"Frequency", field:"scheduleType"},
          {title:"Due Date", field:"dueDate", width:150, widthGrow:3,responsive:1, formatter:function(cell, formatterParams, onRendered){
                  var val = new Date(new Date(cell.getValue()).setHours(new Date(cell.getValue()).getHours() + 29));
                 val < new Date(new Date().setHours(0, 0, 0, 0)) ? cell.getRow().getElement().style.backgroundColor = "#f5beba"
                   : val > new Date(new Date().setHours(23, 59, 59, 0)) ? cell.getRow().getElement().style.backgroundColor = "#c2f2d8" : '';
                  return new Date(val).toString().slice(0, 15);
          }}
      ]}
    ],
  });
  unassignedTasksTable.on('rowClick', (e, row) => {
    if (document.getElementById("unassignedTasks"+row.getIndex())) {
      document.getElementById("unassignedTask"+row.getIndex()).remove();
      var val = new Date(new Date(row.getData().dueDate).setHours(new Date(row.getData().dueDate).getHours() + 29));
      new val < new Date(new Date().setHours(0, 0, 0, 0)) ? row.getElement().style.backgroundColor = "#f5beba"
                   : new val > new Date(new Date().setHours(23, 59, 59, 0)) ? row.getElement().style.backgroundColor = "#c2f2d8" : row.getElement().style.backgroundColor = null;
    } else {
      $("#unassignedTasksTable").append("<input type='hidden' id='unassignedTask"+row.getIndex()+"' name='unassignedTask' value='"+row.getIndex()+"'/>");
      row.getElement().style.backgroundColor = "#9abcea";
    }
  });

  window.addEventListener('resize', function(){
    unassignedTasksTable.redraw();
  });
  </script>